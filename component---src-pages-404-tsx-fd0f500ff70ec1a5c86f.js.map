{"version":3,"sources":["webpack:///./src/pages/404.tsx","webpack:///./src/utils/typography.ts","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.tsx","webpack:///./src/components/seo.tsx"],"names":["__webpack_require__","r","__webpack_exports__","React","d","pageQuery","_components_layout__WEBPACK_IMPORTED_MODULE_0__","_components_seo__WEBPACK_IMPORTED_MODULE_1__","NotFoundPage","_ref","data","location","siteTitle","site","siteMetadata","title","createElement","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","a","loader","enqueue","createContext","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","Layout","children","header","pathname","style","marginBottom","marginTop","gatsby__WEBPACK_IMPORTED_MODULE_1__","textDecoration","color","to","fontFamily","marginLeft","marginRight","maxWidth","padding","Date","getFullYear","href","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"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","file":"component---src-pages-404-tsx-fd0f500ff70ec1a5c86f.js","sourcesContent":["/* eslint-disable react/prop-types */\n\nimport React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\ninterface Props {\n  data: any;\n  location: any;\n}\n\nconst NotFoundPage = ({ data, location }: Props): JSX.Element => {\n  const siteTitle = data.site.siteMetadata.title;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"404: Not Found\" />\n      <h1>Not Found</h1>\n      <p>You just hit a route that doesn{`'`}t exist... the sadness.</p>\n    </Layout>\n  );\n};\n\nexport default NotFoundPage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n","import Typography from 'typography';\n// @ts-ignore\nimport Wordpress2016 from 'typography-theme-wordpress-2016';\n\nWordpress2016.overrideThemeStyles = (): any => ({\n  'a.gatsby-resp-image-link': {\n    boxShadow: `none`,\n  },\n});\n\ndelete Wordpress2016.googleFonts;\n\nconst typography = new Typography(Wordpress2016);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles();\n}\n\nexport default typography;\nexport const { rhythm } = typography;\nexport const { scale } = typography;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/* eslint-disable react/prop-types */\n\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport { rhythm, scale } from '../utils/typography';\n\ninterface Props {\n  children: JSX.Element | JSX.Element[];\n  location: any;\n  title: string;\n}\n\nconst Layout = ({ children, location, title }: Props): JSX.Element => {\n  // @ts-ignore\n  const rootPath = `${__PATH_PREFIX__}/`;\n  const header =\n    location.pathname === rootPath ? (\n      <h1\n        style={{\n          ...scale(1.5),\n          marginBottom: rhythm(1.5),\n          marginTop: 0,\n        }}\n      >\n        <Link\n          style={{\n            boxShadow: `none`,\n            textDecoration: `none`,\n            color: `inherit`,\n          }}\n          to=\"/\"\n        >\n          {title}\n        </Link>\n      </h1>\n    ) : (\n      <h3\n        style={{\n          fontFamily: `Montserrat, sans-serif`,\n          marginTop: 0,\n        }}\n      >\n        <Link\n          style={{\n            boxShadow: `none`,\n            textDecoration: `none`,\n            color: `inherit`,\n          }}\n          to=\"/\"\n        >\n          {title}\n        </Link>\n      </h3>\n    );\n\n  return (\n    <div\n      style={{\n        marginLeft: `auto`,\n        marginRight: `auto`,\n        maxWidth: rhythm(24),\n        padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n      }}\n    >\n      <header>{header}</header>\n      <main>{children}</main>\n      <footer>\n        © {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n      </footer>\n    </div>\n  );\n};\n\nexport default Layout;\n","/* eslint-disable react/prop-types */\n\n/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\ninterface Props {\n  description: string;\n  lang: string;\n  meta: any;\n  title: string;\n}\n\nfunction SEO({ description, lang, meta, title }: Props): JSX.Element {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n};\n\nexport default SEO;\n"],"sourceRoot":""}