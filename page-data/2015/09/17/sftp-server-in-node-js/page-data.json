{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/2015/09/17/sftp-server-in-node-js/","result":{"data":{"site":{"siteMetadata":{"title":"Mitchell Simoens Blog","author":"Mitchell Simoens"}},"markdownRemark":{"id":"9a2d555c-4272-5be6-9ff8-e5d07b3ab248","excerpt":"I have a project that I want to start working on but first needed to create a quick proof-of-concept (POC) to make sure I can do what I wanted. I was about 9…","html":"<p>I have a project that I want to start working on but first needed to create a quick proof-of-concept (POC) to make sure I can do what I wanted. I was about 99% sure what I want to do is possible, just that 1% is due to never doing it. So the POC was to create a SFTP server that saved public keys in a database like GitHub does. I know you can install an ssh server and use the <a href=\"http://linux.die.net/man/5/sshd_config\"><code class=\"language-text\">AuthorizedKeysCommand</code></a> but if possible, I wanted to do everything within <a href=\"https://nodejs.org/en/\">Node.js</a>, not install another server onto my server.</p>\n<p>First thing most people do, off to search <a href=\"https://www.npmjs.com/\">npm</a>. I quickly found the <a href=\"https://www.npmjs.com/package/ssh2\">ssh2</a> module which seemed to have active development still (GitHub repo started in August 2012 and still has commits from a couple days ago). After setting up example server and client scripts, I needed to get a file downloaded from the server. I did have a bit of trouble with this but <a href=\"https://github.com/mscdex\">mscdex</a> gave me a <a href=\"https://github.com/mscdex/ssh2/issues/322#issuecomment-140930439\">boost</a>, much obliged! So I got a file downloading and even got it to authenticate based on private/public keys reading from my filesystem. Looking at the code, it’s async so I knew I could do this by saving it in a MySQL database and it’s was extremely easy.</p>\n<p>I’ve setup a simple example GitHub <a href=\"https://github.com/mitchellsimoens/SFTPServer\">repo</a>. The server is <code class=\"language-text\">server.js</code> and a test client script is in <code class=\"language-text\">client_test.js</code>. You’ll have to change some configs in both scripts. You’ll also need to setup the table I use, this is what I have:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">CREATE TABLE `user_public_keys` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `username` varchar(200) NOT NULL,\n  `name` varchar(25) NOT NULL,\n  `key` text NOT NULL,\n  `added` datetime NOT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=latin1;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Once you setup the MySQL connection details in <code class=\"language-text\">server.js</code> you’ll be able to read from the table. You’ll have to generate an RSA host key, check out <code class=\"language-text\">keys/README.md</code>, it’s a simple command but pay attention to where it wants to save the file, I placed it at <code class=\"language-text\">keys/host_rsa</code>.</p>\n<p>Not sure what other steps are needed but that should be it. Some configs in <code class=\"language-text\">server.js</code> and <code class=\"language-text\">client_test.js</code>, MySQL table, host key and of course the <code class=\"language-text\">npm install</code> command to install module dependencies. Should be able to start the server (<code class=\"language-text\">node server</code>) and then try the client script (<code class=\"language-text\">node client_test</code>) and it should download the file. The server will remain up and you should see some logs that show the OPEN, FSTAT, READ and CLOSE steps.</p>","fields":{"readingTime":{"text":"3 min read"},"slug":"/2015/09/17/sftp-server-in-node-js/"},"frontmatter":{"title":"SFTP server in Node.js","date":"September 17, 2015"}}},"pageContext":{"slug":"/2015/09/17/sftp-server-in-node-js/","previous":{"fields":{"slug":"/2015/08/26/react-dispatcher-improved/"},"frontmatter":{"title":"React dispatcher, improved"}},"next":{"fields":{"slug":"/2015/09/22/loading-ext-direct-api/"},"frontmatter":{"title":"Loading Ext.Direct api"}}}}}