{"componentChunkName":"component---src-templates-blog-post-js","path":"/2015/05/21/requiring-classes/","webpackCompilationHash":"56543836aa9ef392dae0","result":{"data":{"site":{"siteMetadata":{"title":"Mitchell Simoens Blog","author":"Mitchell Simoens"}},"markdownRemark":{"id":"f2e7fdce-fed2-5154-9d21-1cd9cddd2ecc","excerpt":"Since Ext JS 4 came out, Ext JS supported loading classes on demand during development. You do this using the  property in your  statement or using…","html":"<p>Since Ext JS 4 came out, Ext JS supported loading classes on demand during development. You do this using the <a href=\"http://docs.sencha.com/extjs/latest/apidocs/#!/api/Ext.Class-cfg-requires\"><code class=\"language-text\">requires</code></a> property in your <a href=\"http://docs.sencha.com/extjs/latest/apidocs/#!/api/Ext-method-define\"><code class=\"language-text\">Ext.define</code></a> statement or using <a href=\"http://docs.sencha.com/extjs/latest/apidocs/#!/api/Ext-method-require\"><code class=\"language-text\">Ext.require</code></a>. Furthermore, ever since Sencha Cmd was released, it will check out these means of requiring classes and create a build of only those classes that are required.</p>\n<h3><code class=\"language-text\">requires</code> property</h3>\n<p>As mentioned, when using <code class=\"language-text\">Ext.define</code> you should use the <code class=\"language-text\">requires</code> property to require classes. Let’s look at a sample class without the requires property:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Ext.define(&#39;MyApp.view.user.Form&#39;, {\n    extend : &#39;Ext.form.Panel&#39;,\n    xtype  : &#39;myapp-user-form&#39;,\n\n    items : [\n        {\n            xtype : &#39;fieldset&#39;,\n            title : &#39;Details&#39;,\n            items : [\n                {\n                    xtype      : &#39;textfield&#39;,\n                    fieldLabel : &#39;Name&#39;,\n                    name       : &#39;name&#39;\n                },\n                {\n                    xtype      : &#39;textfield&#39;,\n                    fieldLabel : &#39;Email&#39;,\n                    name       : &#39;email&#39;,\n                    vtype      : &#39;email&#39;\n                }\n            ]\n        }\n    ]\n});</code></pre></div>\n<p>If we use this class in our application things may work depending on if the classes are required elsewhere. However, your application will be changing as time goes on so this may work now but may break a production build later. For this reason, I tend to make sure each class requires that classes it uses. The requires property would then look like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Ext.define(&#39;MyApp.view.user.Form&#39;, {\n    extend : &#39;Ext.form.Panel&#39;,\n    xtype  : &#39;myapp-user-form&#39;,\n\n    requires : [\n        &#39;Ext.form.field.Text&#39;,\n        &#39;Ext.form.FieldSet&#39;\n    ],\n\n    items : [\n        {\n            xtype : &#39;fieldset&#39;,\n            title : &#39;Details&#39;,\n            items : [\n                {\n                    xtype      : &#39;textfield&#39;,\n                    fieldLabel : &#39;Name&#39;,\n                    name       : &#39;name&#39;\n                },\n                {\n                    xtype      : &#39;textfield&#39;,\n                    fieldLabel : &#39;Email&#39;,\n                    name       : &#39;email&#39;,\n                    vtype      : &#39;email&#39;\n                }\n            ]\n        }\n    ]\n});</code></pre></div>\n<p>Now I know that no matter what else goes on in my application, this class will be safe as far as what it needs.</p>\n<p>Remember, your <code class=\"language-text\">MyApp.Application</code> class can use the requires property also for any classes that need to be there for startup. For example, that’s where I put my <a href=\"https://sencha.guru/2015/03/23/use-of-a-base-url-in-a-utility-class/\">utility singletons</a>.</p>\n<h3><code class=\"language-text\">Ext.require</code></h3>\n<p>If you’re not using MVC/MVVM and therefore don’t have an Application class, well, first shame on you! Ext JS doesn’t require the MVC/MVVM pattern but I very much recommend it. Anyway, to require classes before <code class=\"language-text\">Ext.onReady</code> executes you can use <code class=\"language-text\">Ext.require</code> to require classes much the same way:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Ext.require(&#39;Ext.form.FieldSet&#39;);\n// or use an array:\nExt.require([\n    &#39;Ext.form.field.Text&#39;,\n    &#39;Ext.form.FieldSet&#39;\n]);</code></pre></div>\n<h3><code class=\"language-text\">requires</code> vs <code class=\"language-text\">uses</code></h3>\n<p>The <code class=\"language-text\">requires</code> property will ensure those classes are loaded and defined before the class being required is defined. Cmd will use the <code class=\"language-text\">requires</code> to build a dependency map and include the files in order based on the requires. However, in development the <code class=\"language-text\">requires</code> property may cause synchronous loading so that your code will work (this depends on if <code class=\"language-text\">Ext.onReady</code> or <code class=\"language-text\">Ext.application</code>’s <a href=\"http://docs.sencha.com/extjs/latest/apidocs/#!/api/Ext.app.Application-method-launch\"><code class=\"language-text\">launch</code></a> method has executed) which can slow things down. This is where the <a href=\"http://docs.sencha.com/extjs/latest/apidocs/#!/api/Ext.Class-cfg-uses\"><code class=\"language-text\">uses</code></a> property can be used. This is what the <code class=\"language-text\">uses</code> property looks like:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Ext.define(&#39;MyApp.view.user.Form&#39;, {\n    extend : &#39;Ext.form.Panel&#39;,\n    xtype  : &#39;myapp-user-form&#39;,\n\n    uses : [\n        &#39;Ext.form.field.Text&#39;,\n        &#39;Ext.form.FieldSet&#39;\n    ],\n\n    items : [\n        {\n            xtype : &#39;fieldset&#39;,\n            title : &#39;Details&#39;,\n            items : [\n                {\n                    xtype      : &#39;textfield&#39;,\n                    fieldLabel : &#39;Name&#39;,\n                    name       : &#39;name&#39;\n                },\n                {\n                    xtype      : &#39;textfield&#39;,\n                    fieldLabel : &#39;Email&#39;,\n                    name       : &#39;email&#39;,\n                    vtype      : &#39;email&#39;\n                }\n            ]\n        }\n    ]\n});</code></pre></div>\n<p>The difference between <code class=\"language-text\">uses</code> and <code class=\"language-text\">requires</code> is unlike how <code class=\"language-text\">requires</code> will load it’s classes before the <code class=\"language-text\">MyApp.view.user.Form</code> is defined, <code class=\"language-text\">uses</code> will define <code class=\"language-text\">MyApp.view.user.Form</code> even if the classes are not loaded. <code class=\"language-text\">Ext.form.field.Text</code> and <code class=\"language-text\">Ext.form.FieldSet</code> may be loaded and defined after <code class=\"language-text\">MyApp.view.user.Form</code> is defined since <code class=\"language-text\">MyApp.view.user.Form</code> doesn’t require them to be loaded before it is defined.</p>\n<h3>Many requires</h3>\n<p>Requiring a class many times will not affect performance, if a class is already defined it will not be loaded again and will be skipped. Also, requiring classes on the fly like this is only for development. When you do a build with Sencha Cmd, Cmd will remove these automatically for you so in a production build this code will simply not be there. So I play it safe and add all the classes in the requires.</p>\n<p>I will say that having knowledge of what classes are then requiring other classes helps. So if I require <code class=\"language-text\">Ext.form.field.Text</code>, I know that it already requires <code class=\"language-text\">Ext.form.field.VTypes</code>. Since I use the <code class=\"language-text\">vtype</code> config, I do need <code class=\"language-text\">Ext.form.field.VTypes</code> to be loaded but my code doesn’t have to require it since <code class=\"language-text\">Ext.form.field.Text</code> is already requiring it. The <a href=\"http://docs.sencha.com/extjs/latest/apidocs/#!/api/Ext.form.field.Text\">API docs</a> denote what it’s requiring on the right.</p>\n<h3>Other means of requiring</h3>\n<p>Ext JS also has other means of requiring classes for you. If you <a href=\"http://docs.sencha.com/extjs/latest/apidocs/#!/api/Ext.Class-cfg-extend\">extend</a> a class, Ext JS will require that class for you as expected. If you define <a href=\"http://docs.sencha.com/extjs/latest/apidocs/#!/api/Ext.Class-cfg-mixins\"><code class=\"language-text\">mixins</code></a>, those too will also be required for you.</p>","fields":{"slug":"/2015/05/21/requiring-classes/"},"frontmatter":{"title":"Requiring classes","date":"May 21, 2015"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2015/05/21/requiring-classes/","previous":{"fields":{"slug":"/2015/05/12/how-not-to-recruit/"},"frontmatter":{"title":"How Not To Recruit"}},"next":{"fields":{"slug":"/2015/06/30/the-death-of-major-versions/"},"frontmatter":{"title":"The death of major versions?"}}}}}