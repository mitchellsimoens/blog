{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/2015/06/30/the-death-of-major-versions/","webpackCompilationHash":"09c068e57f27da02c32d","result":{"data":{"site":{"siteMetadata":{"title":"Mitchell Simoens Blog","author":"Mitchell Simoens"}},"markdownRemark":{"id":"afc7e719-e7e7-5ac5-a5a0-1b7b43d2f1d4","excerpt":"<rant> I for one, love updating an app and seeing a new major version released. It’s like Christmas morning, what new goodies am I gonna get to enjoy?! In the…","html":"<p>&#x3C;rant></p>\n<p>I for one, love updating an app and seeing a new major version released. It’s like Christmas morning, what new goodies am I gonna get to enjoy?! In the case of some apps like Chrome and Firefox, a new major version may just be some bug fixes… (sadpanda)</p>\n<p>Don’t get me wrong, I love that Chrome and Firefox are being agile and releasing often on a schedule but why change the major version if nothing is big enough to dictate a new major version. To me, a new major version should have a few big new features or enough rewrite under the hood to deserve such a version. Why not use a dot release so instead of Chrome 43 it’d be something like Chrome 4.27 or something like that? So when Chrome 5 comes out, you know there was something major has happened.</p>\n<p>If I created a browser extension that relies on some feature but that feature was added in… crap, what version again? Oh, Chrome 243. Ok cool… Knowing that Chrome 6 added the feature is a lot easier to remember.</p>\n<p>Small potatoes huh? Yes and no. Yes, knowing something changed in version 6 versus 243 is just a different number but maybe version 6 brought many changes whereas version 174, 243 and 257 brought the changes so now you can only target 257+. What if version 6 replaced V8 with something new? That should definitely be a new major version that is distinguishable right? Nah, it’s version whatever.</p>\n<p>Man, I woke up on the nitpicking side of the bed today.</p>\n<p>&#x3C;/rant></p>","fields":{"slug":"/2015/06/30/the-death-of-major-versions/"},"frontmatter":{"title":"The death of major versions?","date":"June 30, 2015"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2015/06/30/the-death-of-major-versions/","previous":{"fields":{"slug":"/2015/05/21/requiring-classes/"},"frontmatter":{"title":"Requiring classes"}},"next":{"fields":{"slug":"/2015/07/02/delaying-launch-for-stores-to-load/"},"frontmatter":{"title":"Delaying launch for stores to load"}}}}}