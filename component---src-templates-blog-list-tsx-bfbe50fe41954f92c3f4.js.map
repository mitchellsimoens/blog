{"version":3,"sources":["webpack:///./src/templates/blog-list.tsx","webpack:///./src/utils/typography.ts","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.tsx","webpack:///./src/components/seo.tsx","webpack:///./src/components/bio.tsx"],"names":["__webpack_require__","r","__webpack_exports__","React","d","blogListQuery","gatsby__WEBPACK_IMPORTED_MODULE_0__","_components_bio__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","_utils_typography__WEBPACK_IMPORTED_MODULE_4__","BlogList","props","posts","data","allMarkdownRemark","edges","location","_props$pageContext","pageContext","currentPage","numPages","title","createElement","map","_ref","node","postTitle","frontmatter","fields","slug","key","style","marginBottom","rhythm","boxShadow","to","date","dangerouslySetInnerHTML","__html","description","excerpt","className","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","googleFonts","typography","Typography","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","a","loader","enqueue","createContext","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","Layout","children","header","pathname","marginTop","gatsby__WEBPACK_IMPORTED_MODULE_1__","textDecoration","color","fontFamily","marginLeft","marginRight","maxWidth","padding","Date","getFullYear","href","SEO","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Bio","_public_static_d_3583473817_json__WEBPACK_IMPORTED_MODULE_1__","_data$site$siteMetada","social","display","gatsby_image__WEBPACK_IMPORTED_MODULE_2___default","fixed","avatar","childImageSharp","alt","minWidth","borderRadius","imgStyle","react_twitter_embed__WEBPACK_IMPORTED_MODULE_3__","screenName","twitter","options","size"],"mappings":"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","file":"component---src-templates-blog-list-tsx-bfbe50fe41954f92c3f4.js","sourcesContent":["/* eslint-disable react/prop-types */\n\nimport React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Bio from '../components/bio';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { rhythm } from '../utils/typography';\nimport './blog-list.css';\n\ninterface Props {\n  data: any;\n  location: any;\n  pageContext: any;\n}\n\nconst BlogList = (props: Props): JSX.Element => {\n  const {\n    data: {\n      allMarkdownRemark: { edges: posts },\n    },\n    location,\n    pageContext: { currentPage, numPages, title },\n  } = props;\n\n  return (\n    <Layout location={location} title={title}>\n      <SEO title={`Posts Page ${currentPage}`} />\n      <Bio />\n\n      {posts.map(\n        ({ node }: any): JSX.Element => {\n          const postTitle = node.frontmatter.title || node.fields.slug;\n\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {postTitle}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </div>\n          );\n        },\n      )}\n\n      <div className=\"blog-list-navigation\">\n        {currentPage > 1 && (\n          <Link style={{ boxShadow: `none` }} to={currentPage === 2 ? '' : `/page/${currentPage - 1}`}>\n            {/* <Link style={{ boxShadow: `none` }} to={`/page/${currentPage === 2 ? '' : currentPage - 1}`}> */}← Newer\n            Posts\n          </Link>\n        )}\n        <div className=\"blog-list-navigation-spacer\" />\n        {currentPage < numPages && (\n          <Link style={{ boxShadow: `none` }} to={`/page/${currentPage + 1}`}>\n            Older Posts →\n          </Link>\n        )}\n      </div>\n    </Layout>\n  );\n};\n\nexport default BlogList;\n\nexport const blogListQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }, limit: $limit, skip: $skip) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n","import Typography from 'typography';\n// @ts-ignore\nimport Wordpress2016 from 'typography-theme-wordpress-2016';\n\nWordpress2016.overrideThemeStyles = (): any => ({\n  'a.gatsby-resp-image-link': {\n    boxShadow: `none`,\n  },\n});\n\ndelete Wordpress2016.googleFonts;\n\nconst typography = new Typography(Wordpress2016);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles();\n}\n\nexport default typography;\nexport const { rhythm } = typography;\nexport const { scale } = typography;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/* eslint-disable react/prop-types */\n\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport { rhythm, scale } from '../utils/typography';\n\ninterface Props {\n  children: JSX.Element | JSX.Element[];\n  location: any;\n  title: string;\n}\n\nconst Layout = ({ children, location, title }: Props): JSX.Element => {\n  // @ts-ignore\n  const rootPath = `${__PATH_PREFIX__}/`;\n  const header =\n    location.pathname === rootPath ? (\n      <h1\n        style={{\n          ...scale(1.5),\n          marginBottom: rhythm(1.5),\n          marginTop: 0,\n        }}\n      >\n        <Link\n          style={{\n            boxShadow: `none`,\n            textDecoration: `none`,\n            color: `inherit`,\n          }}\n          to=\"/\"\n        >\n          {title}\n        </Link>\n      </h1>\n    ) : (\n      <h3\n        style={{\n          fontFamily: `Montserrat, sans-serif`,\n          marginTop: 0,\n        }}\n      >\n        <Link\n          style={{\n            boxShadow: `none`,\n            textDecoration: `none`,\n            color: `inherit`,\n          }}\n          to=\"/\"\n        >\n          {title}\n        </Link>\n      </h3>\n    );\n\n  return (\n    <div\n      style={{\n        marginLeft: `auto`,\n        marginRight: `auto`,\n        maxWidth: rhythm(24),\n        padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n      }}\n    >\n      <header>{header}</header>\n      <main>{children}</main>\n      <footer>\n        © {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n      </footer>\n    </div>\n  );\n};\n\nexport default Layout;\n","/* eslint-disable react/prop-types */\n\n/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\ninterface Props {\n  description: string;\n  lang: string;\n  meta: any;\n  title: string;\n}\n\nfunction SEO({ description, lang, meta, title }: Props): JSX.Element {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n};\n\nexport default SEO;\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Image from 'gatsby-image';\n// @ts-ignore\nimport { TwitterFollowButton } from 'react-twitter-embed';\n\nimport { rhythm } from '../utils/typography';\n\nconst Bio = (): JSX.Element => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/profile-pic.png/\" }) {\n        childImageSharp {\n          fixed(width: 50, height: 50) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `);\n\n  const { author, social } = data.site.siteMetadata;\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        marginBottom: rhythm(2.5),\n      }}\n    >\n      <Image\n        fixed={data.avatar.childImageSharp.fixed}\n        alt={author}\n        style={{\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: '100%',\n        }}\n        imgStyle={{\n          borderRadius: '50%',\n        }}\n      />\n\n      <div>\n        <p>\n          Written by {author} who is a long time nerd developing software and building computers and gadgets. Anything\n          expressed on this website are {author}\n          {`'`}s alone and do not represent his employer.\n        </p>\n\n        <TwitterFollowButton screenName={social.twitter} options={{ size: 'large' }} />\n      </div>\n    </div>\n  );\n};\n\nexport default Bio;\n"],"sourceRoot":""}